---
name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-deploy-release:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare Environment
        id: prepare
        run: |
          BUILD_CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          BUILD_REVISION=${GITHUB_SHA::8}
          BUILD_VERSION=${GITHUB_REF/refs\/tags\//}
          DOCKER_IMAGE=ghcr.io/maglevlabs/infrastructure-toolkit
        
          echo ::set-output name=build_created::${BUILD_CREATED}
          echo ::set-output name=build_revision::${BUILD_REVISION}
          echo ::set-output name=build_version::${BUILD_VERSION}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Image for Scanning
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          build-args: |
            BUILD_CREATED=${{ steps.prepare.outputs.build_created }}
            BUILD_REVISION=${{ steps.prepare.outputs.build_revision }}
            BUILD_VERSION=${{ steps.prepare.outputs.build_version }}
          tags: |
            ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.build_version }}

      - name: Scan Image
        uses: anchore/scan-action@v2
        with:
          image: "${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.build_version }}"
          fail-build: true
          severity-cutoff: critical

      - name: Build and Push Image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          build-args: |
            BUILD_CREATED=${{ steps.prepare.outputs.build_created }}
            BUILD_REVISION=${{ steps.prepare.outputs.build_revision }}
            BUILD_VERSION=${{ steps.prepare.outputs.build_version }}
          tags: |
            ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.build_version }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Infrastructure Toolkit - Release ${{ github.ref }}
          body: |
            `docker pull ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.build_version }}`
          draft: false
          prerelease: false
